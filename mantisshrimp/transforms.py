# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/07_transforms.ipynb (unless otherwise specified).

__all__ = ['Tfm', 'AlbuTfm']

# Cell
from .imports import *
from .core import *
from .data.all import *

# Cell
class Tfm:
    def __init__(self, tfms): self.tfms = tfms
    def __call__(self, item):
        tfmed = self.apply(**item.asdict())
        return item.replace(**tfmed)

# Cell
class AlbuTfm(Tfm):
    def __init__(self, tfms):
        self.bbox_params=A.BboxParams(format='pascal_voc', label_fields=['labels'])
        super().__init__(tfms=A.Compose(tfms, bbox_params=self.bbox_params))

    def apply(self, img, labels, bboxes=None, masks=None, **kwargs):
        d = self.tfms(image=img, labels=labels,
                      masks=masks.data if masks else None,
                      bboxes=lmap(lambda o: o.xyxy, bboxes))
        return {
            'img': d['image'], 'labels': d['labels'],
            'bboxes': lmap(lambda o: BBox.from_xyxy(*o), d['bboxes']),
            'masks': ifnotnone(d['masks'], lambda o: Mask(np.stack(o))),
        }